{"files":[{"id":"27179f5f-3c21-4305-b22b-739fb022b3a2","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Lima\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_ACCESSING\",\n    \"access\": \"ANYONE\"\n  }\n}"},{"id":"15cca29d-fcf7-4de4-972e-6e243af1dd25","name":"TestMailApp","type":"server_js","source":"const TESTMAIL_CONFIG \u003d {\n  API_KEY: \u0027e769cbfe-db59-4af7-97d3-74703239d385\u0027,\n  BASE_URL: \u0027https://api.testmail.app/api/json\u0027,\n  NAMESPACE: \u0027wjlcs\u0027\n};\n\nfunction getAllArrivedEmails(limit \u003d 400) {\n  try {\n    const url \u003d `${TESTMAIL_CONFIG.BASE_URL}?apikey\u003d${TESTMAIL_CONFIG.API_KEY}\u0026namespace\u003d${TESTMAIL_CONFIG.NAMESPACE}\u0026limit\u003d${limit}`;\n    const response \u003d UrlFetchApp.fetch(url, { method: \u0027GET\u0027, muteHttpExceptions: true });\n    if (response.getResponseCode() \u003d\u003d\u003d 200) {\n      const json \u003d JSON.parse(response.getContentText());\n      return json.emails || [];\n    } else {\n      Logger.log(`Error HTTP: ${response.getResponseCode()} - ${response.getContentText()}`);\n      return [];\n    }\n  } catch (error) {\n    Logger.log(error);\n    return [];\n  }\n}\n\n// Devuelve lista única de correos (alias) usados en todos los mensajes recibidos\nfunction getAliasHistoryForFrontend() {\n  const emails \u003d getAllArrivedEmails(400);\n  const aliasesSet \u003d new Set();\n  emails.forEach(e \u003d\u003e {\n    if (e.to \u0026\u0026 e.to.startsWith(\u0027wjlcs.\u0027) \u0026\u0026 e.to.endsWith(\u0027@inbox.testmail.app\u0027)) {\n      aliasesSet.add(e.to);\n    }\n  });\n  return Array.from(aliasesSet).sort(); // orden alfabético\n}\n\nfunction getEmailsByAlias(alias, limit \u003d 40) {\n  const emails \u003d getAllArrivedEmails(400);\n  const filtered \u003d emails.filter(e \u003d\u003e e.to \u003d\u003d\u003d alias);\n  return filtered.sort((a, b) \u003d\u003e b.timestamp - a.timestamp).slice(0, limit);\n}\n\nfunction getAllEmailsForFrontend() {\n  const emails \u003d getAllArrivedEmails(400);\n  return emails.sort((a, b) \u003d\u003e b.timestamp - a.timestamp);\n}\n\nfunction getEmails(tag \u003d \u0027test\u0027, limit \u003d 20, offset \u003d 0, livequery \u003d false) {\n  try {\n    const url \u003d `${TESTMAIL_CONFIG.BASE_URL}?apikey\u003d${TESTMAIL_CONFIG.API_KEY}\u0026namespace\u003d${TESTMAIL_CONFIG.NAMESPACE}\u0026tag\u003d${encodeURIComponent(tag)}\u0026limit\u003d${limit}\u0026offset\u003d${offset}\u0026livequery\u003d${livequery}`;\n    const response \u003d UrlFetchApp.fetch(url, {\n      method: \u0027GET\u0027,\n      headers: { \u0027Content-Type\u0027: \u0027application/json\u0027 }\n    });\n    if (response.getResponseCode() \u003d\u003d\u003d 200) {\n      const json \u003d JSON.parse(response.getContentText());\n      return json;\n    } else {\n      throw new Error(`Error HTTP: ${response.getResponseCode()}`);\n    }\n  } catch (error) {\n    Logger.log(error);\n    return {emails: []};\n  }\n}\n\nfunction searchEmails(tag, subject \u003d \u0027\u0027, from \u003d \u0027\u0027, limit \u003d 10) {\n  try {\n    let url \u003d `${TESTMAIL_CONFIG.BASE_URL}?apikey\u003d${TESTMAIL_CONFIG.API_KEY}\u0026namespace\u003d${TESTMAIL_CONFIG.NAMESPACE}\u0026tag\u003d${encodeURIComponent(tag)}\u0026limit\u003d${limit}`;\n    if (subject) url +\u003d `\u0026subject\u003d${encodeURIComponent(subject)}`;\n    if (from) url +\u003d `\u0026from\u003d${encodeURIComponent(from)}`;\n    const response \u003d UrlFetchApp.fetch(url);\n    return JSON.parse(response.getContentText());\n  } catch (error) {\n    Logger.log(error);\n    throw error;\n  }\n}\n\nfunction getLatestEmail(tag) {\n  try {\n    const emails \u003d getEmails(tag, 1, 0);\n    if (emails.emails \u0026\u0026 emails.emails.length \u003e 0) {\n      return emails.emails[0];\n    }\n    return null;\n  } catch (error) {\n    Logger.log(error);\n    return null;\n  }\n}\n\nfunction waitForNewEmail(tag, timeoutSeconds \u003d 30) {\n  try {\n    const url \u003d `${TESTMAIL_CONFIG.BASE_URL}?apikey\u003d${TESTMAIL_CONFIG.API_KEY}\u0026namespace\u003d${TESTMAIL_CONFIG.NAMESPACE}\u0026tag\u003d${encodeURIComponent(tag)}\u0026limit\u003d1\u0026livequery\u003dtrue`;\n    const response \u003d UrlFetchApp.fetch(url, {\n      method: \u0027GET\u0027,\n      headers: { \u0027Content-Type\u0027: \u0027application/json\u0027 }\n    });\n    const data \u003d JSON.parse(response.getContentText());\n    if (data.emails \u0026\u0026 data.emails.length \u003e 0) {\n      return data.emails[0];\n    }\n    return null;\n  } catch (error) {\n    Logger.log(error);\n    throw error;\n  }\n}\n\nfunction getEmailBodyById(aliasOrTag, emailId) {\n  let emails;\n  if (aliasOrTag \u003d\u003d\u003d \u0027todos\u0027) {\n    emails \u003d getAllEmailsForFrontend();\n  } else if (aliasOrTag.includes(\u0027@\u0027)) {\n    emails \u003d getEmailsByAlias(aliasOrTag, 40);\n  } else {\n    emails \u003d getEmails(aliasOrTag, 50).emails || [];\n  }\n  const email \u003d emails.find(e \u003d\u003e e.id \u003d\u003d emailId);\n  if (!email) return {};\n  return {\n    subject: email.subject,\n    from: email.from,\n    to: email.to,\n    html: email.html,\n    text: email.text\n  };\n}\n\n// Opcionales: para herramientas avanzadas\nfunction validateAPIConfiguration() {\n  try {\n    getEmails(\u0027validation_test\u0027, 1);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction createEmailReport(tag \u003d \u0027test\u0027, sheetName \u003d \u0027TestMail Report\u0027) {\n  try {\n    const emails \u003d getEmails(tag, 50);\n    let sheet;\n    const spreadsheet \u003d SpreadsheetApp.getActiveSpreadsheet();\n    try {\n      sheet \u003d spreadsheet.getSheetByName(sheetName);\n      sheet.clear();\n    } catch (e) {\n      sheet \u003d spreadsheet.insertSheet(sheetName);\n    }\n    const headers \u003d [\u0027Fecha\u0027, \u0027De\u0027, \u0027Para\u0027, \u0027Asunto\u0027, \u0027Preview\u0027];\n    sheet.getRange(1, 1, 1, headers.length).setValues([headers]);\n    sheet.getRange(1, 1, 1, headers.length).setFontWeight(\u0027bold\u0027);\n    if (emails.emails \u0026\u0026 emails.emails.length \u003e 0) {\n      const data \u003d emails.emails.map(email \u003d\u003e {\n        const date \u003d new Date(email.timestamp * 1000);\n        const preview \u003d (email.text || \u0027\u0027).substring(0, 100) + \u0027...\u0027;\n        return [date, email.from, email.to, email.subject, preview];\n      });\n      sheet.getRange(2, 1, data.length, headers.length).setValues(data);\n    }\n    sheet.autoResizeColumns(1, headers.length);\n  } catch (error) {\n    Logger.log(error);\n  }\n}"},{"id":"5aceef3d-1da4-4665-86cf-a24212f8edf3","name":"doGet","type":"server_js","source":"function doGet(e) {\n  return HtmlService.createTemplateFromFile(\u0027TestMailDashboard\u0027)\n    .evaluate()\n    .setTitle(\u0027TestMail.app Dashboard\u0027)\n    .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);\n}"},{"id":"8124c252-b5f5-4ae5-957b-ba92a334eae6","name":"TestMailDashboard","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n  \u003ctitle\u003eTestMail.app Gmail Style\u003c/title\u003e\n  \u003cstyle\u003e\n    html, body {\n      height: 100%;\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    body {\n      font-family: \u0027Segoe UI\u0027, Arial, sans-serif;\n      background: #f1f3f8;\n      min-height: 100vh;\n      width: 100vw;\n      box-sizing: border-box;\n    }\n    .gmail-container {\n      width: calc(100vw - 32px);\n      max-width: calc(100vw - 32px);\n      min-height: 96vh;\n      margin: 8px 16px 8px 16px;\n      background: #fff;\n      border-radius: 14px;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,.19);\n      display: flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      min-width: 0;\n      transition: max-width 0.3s, width 0.3s;\n    }\n    @media (max-width: 900px) {\n      .gmail-container {\n        width: 100vw !important;\n        max-width: 100vw !important;\n        margin: 0 !important;\n        border-radius: 0 !important;\n        box-shadow: none !important;\n      }\n    }\n    .topbar {\n      background: #22336a;\n      color: #fff;\n      padding: 18px 30px;\n      font-size: 1.4em;\n      font-weight: 600;\n      letter-spacing: 0.03em;\n      border-top-left-radius: 14px;\n      border-top-right-radius: 14px;\n      border-bottom: 1px solid #e6e6e6;\n      box-sizing: border-box;\n      width: 100%;\n    }\n    .main-flex {\n      display: flex;\n      flex: 1 1 auto;\n      min-height: 0;\n      width: 100%;\n      min-width: 0;\n      box-sizing: border-box;\n    }\n    .sidebar {\n      width: 400px;\n      min-width: 180px;\n      background: #22336a;\n      color: #fff;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #d6d6e7;\n      border-bottom-left-radius: 14px;\n      box-sizing: border-box;\n      min-width: 0;\n      flex-shrink: 0;\n    }\n    .sidebar h2 {\n      text-align: center;\n      font-weight: 700;\n      font-size: 1.15em;\n      margin: 18px 0 8px 0;\n      letter-spacing: 0.05em;\n    }\n    .sidebar .alias-list {\n      flex: 1 1 auto;\n      overflow-y: auto;\n      margin-bottom: 12px;\n      padding-right: 8px;\n    }\n    .alias-item {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 5px;\n      padding: 10px 12px;\n      border-radius: 8px;\n      margin-bottom: 4px;\n      cursor: pointer;\n      transition: background 0.18s;\n      font-size: 1em;\n      border-left: 4px solid transparent;\n      color: #e0e6f7;\n      word-break: break-all;\n    }\n    .alias-item.selected,\n    .alias-item:hover {\n      background: #334386;\n      color: #fff;\n      border-left: 4px solid #39a1f6;\n    }\n    .copy-btn {\n      background: #39a1f6;\n      color: #fff;\n      border: none;\n      border-radius: 5px;\n      padding: 2px 8px;\n      font-size: 0.9em;\n      margin-left: 5px;\n      cursor: pointer;\n      transition: background 0.18s;\n    }\n    .copy-btn:hover, .copy-btn.copied {\n      background: #2174b8;\n    }\n    .copy-btn.copied {\n      color: #d4edda;\n      font-weight: bold;\n    }\n    .sidebar .refresh-btn {\n      margin: 12px;\n      background: #39a1f6;\n      color: #fff;\n      border: none;\n      padding: 8px 0;\n      width: 90%;\n      border-radius: 5px;\n      font-weight: 600;\n      font-size: 1em;\n      cursor: pointer;\n      transition: background 0.18s;\n    }\n    .sidebar .refresh-btn:hover {\n      background: #2174b8;\n    }\n    .main-content {\n      flex: 1 1 auto;\n      display: flex;\n      flex-direction: column;\n      background: #f4f6fb;\n      border-bottom-right-radius: 14px;\n      box-sizing: border-box;\n      min-width: 0;\n      width: 100%;\n    }\n    .toolbar {\n      background: #fff;\n      padding: 14px 20px 0 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      border-bottom: 1px solid #e6e6e6;\n      box-sizing: border-box;\n      width: 100%;\n    }\n    .toolbar .searchbox {\n      width: 100%;\n      margin-bottom: 10px;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n      box-sizing: border-box;\n    }\n    .toolbar input[type\u003d\"text\"], .toolbar input[type\u003d\"number\"] {\n      padding: 8px 12px;\n      border: 1px solid #d7d7df;\n      border-radius: 5px;\n      width: 180px;\n      font-size: 1em;\n      box-sizing: border-box;\n    }\n    .toolbar .button-group {\n      display: flex;\n      flex-direction: row;\n      gap: 10px;\n      margin-bottom: 6px;\n      box-sizing: border-box;\n    }\n    .toolbar .button {\n      padding: 8px 15px;\n      background: #39a1f6;\n      color: #fff;\n      border-radius: 5px;\n      border: none;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background 0.15s;\n      box-sizing: border-box;\n    }\n    .toolbar .button:hover {\n      background: #2174b8;\n    }\n    .refresh-timer {\n      padding: 0 18px;\n      color: #22336a;\n      font-size: 1.01em;\n      margin-bottom: 0;\n      margin-top: 7px;\n      text-align: right;\n      word-break: break-word;\n      box-sizing: border-box;\n      width: 100%;\n    }\n    #statusDiv {\n      width: 100%;\n      box-sizing: border-box;\n      display: block;\n      padding: 0;\n      margin: 0;\n    }\n    .status {\n      margin: 10px 0;\n      padding: 8px;\n      border-radius: 4px;\n      background: #d4edda;\n      color: #155724;\n      width: 100%;\n      max-width: none;\n      box-sizing: border-box;\n      word-break: break-word;\n      overflow-wrap: break-word;\n      font-size: 1em;\n      display: block;\n    }\n    .status.error {background: #f8d7da; color: #721c24;}\n    .status.info  {background: #d1ecf1; color: #0c5460;}\n    .status.success {background: #d4edda; color: #155724;}\n    .message-list {\n      width: 100%;\n      min-width: 0;\n      box-sizing: border-box;\n      flex: 1 1 0;\n      overflow-y: auto;\n      background: #f8fafc;\n      padding: 12px 0 8px 0;\n    }\n    .message-item {\n      display: flex;\n      flex-direction: row;\n      align-items: flex-start;\n      background: #fff;\n      border-radius: 7px;\n      margin: 7px 16px 7px 16px;\n      box-shadow: 0 2px 8px 0 rgba(31,38,135,.06);\n      padding: 13px 14px;\n      cursor: pointer;\n      border-left: 4px solid transparent;\n      transition: background 0.17s, border-color 0.17s;\n      box-sizing: border-box;\n      min-width: 0;\n    }\n    .message-item.selected,\n    .message-item:hover {\n      background: #eaf1fa;\n      border-left: 4px solid #39a1f6;\n    }\n    .message-info {\n      flex: 1 1 auto;\n      min-width: 0;\n      box-sizing: border-box;\n    }\n    .message-from { font-weight: 600; color: #274b7a;}\n    .message-to { font-size: 0.96em; color: #576B91;}\n    .message-subject { font-weight: 700; margin: 4px 0 2px 0;}\n    .message-date { font-size: 0.95em; color: #8ca1c5;}\n    .message-preview { color: #777; margin-top: 6px; font-size: 0.95em;}\n    .gmail-modal-bg {\n      position: fixed;\n      left: 0;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(44,64,92,.17);\n      z-index: 1000;\n      display: none;\n      align-items: center;\n      justify-content: center;\n    }\n    .gmail-modal-bg.active {\n      display: flex;\n    }\n    .gmail-modal-panel {\n      background: #fff;\n      width: 98vw;\n      max-width: 780px;\n      min-width: 0;\n      min-height: 340px;\n      max-height: 92vh;\n      border-radius: 11px;\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,.21);\n      display: flex;\n      flex-direction: column;\n      animation: fadeIn .18s;\n      box-sizing: border-box;\n    }\n    @keyframes fadeIn {\n      from { opacity: 0; transform: translateY(30px);}\n      to { opacity: 1; transform: translateY(0);}\n    }\n    .modal-header {\n      padding: 22px 36px 11px 36px;\n      border-bottom: 1px solid #e6e6e6;\n      font-size: 1.22em;\n      font-weight: 600;\n      color: #274b7a;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n    .modal-close-btn {\n      font-size: 1.4em;\n      background: none;\n      border: none;\n      color: #888;\n      cursor: pointer;\n      padding: 4px 12px;\n      border-radius: 5px;\n      transition: background 0.12s;\n    }\n    .modal-close-btn:hover {\n      background: #eee;\n      color: #22336a;\n    }\n    .modal-body {\n      padding: 18px 36px 22px 36px;\n      overflow-y: auto;\n      min-height: 160px;\n      max-height: 68vh;\n      background: #f5f8fc;\n      font-size: 1.10em;\n      box-sizing: border-box;\n    }\n    .modal-fields { margin-bottom: 18px; box-sizing: border-box;}\n    .modal-fields .field { margin-bottom: 6px; }\n    .modal-fields .label { color: #576B91; font-size: 1em; font-weight: 600; display: inline-block; min-width: 88px;}\n    .modal-fields .value { color: #22336a; font-size: 1em;}\n    .modal-html-box {\n      background: #fff;\n      border-radius: 9px;\n      border: 1px solid #e3e3ec;\n      padding: 18px;\n      max-height: 36vh;\n      overflow-y: auto;\n      font-size: 1.09em;\n      margin-bottom: 12px;\n      word-break: break-word;\n      box-shadow: 0 2px 8px 0 rgba(31,38,135,.08);\n      box-sizing: border-box;\n    }\n    @media (max-width: 900px) {\n      .gmail-container {\n        width: 100vw !important;\n        max-width: 100vw !important;\n        margin: 0 !important;\n        border-radius: 0 !important;\n        box-shadow: none !important;\n      }\n      .main-flex {\n        flex-direction: column;\n        width: 100vw !important;\n        min-width: 0 !important;\n      }\n      .sidebar {\n        width: 100vw !important;\n        min-width: 0;\n        border-radius: 0;\n        border-right: none;\n        border-bottom: 1px solid #d6d6e7;\n      }\n      .main-content {\n        border-radius: 0;\n        min-width: 0;\n        width: 100vw !important;\n        box-sizing: border-box;\n      }\n      .toolbar {\n        width: 100vw;\n        padding: 13px 2vw 0 2vw;\n      }\n      .toolbar .searchbox, .toolbar .button-group {\n        width: 100%;\n        flex-wrap: wrap;\n      }\n      .toolbar input[type\u003d\"text\"], .toolbar input[type\u003d\"number\"] {\n        width: 99vw;\n        min-width: 0;\n        max-width: 100%;\n      }\n      .gmail-modal-panel {\n        max-width: 99vw;\n        min-width: 0;\n      }\n      .refresh-timer {\n        padding: 0 2vw;\n        font-size: 1em;\n        width: 100vw;\n      }\n      #statusDiv, .status {\n        width: 100vw !important;\n        max-width: 100vw !important;\n        margin-left: 0 !important;\n        margin-right: 0 !important;\n      }\n      .message-list {\n        padding: 7px 0 7px 0;\n        width: 100vw !important;\n        min-width: 0;\n        box-sizing: border-box;\n      }\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cdiv class\u003d\"gmail-container\"\u003e\n  \u003cdiv class\u003d\"topbar\"\u003eHANS | TestMail.app Dashboard\u003c/div\u003e\n  \u003cdiv class\u003d\"main-flex\"\u003e\n    \u003cdiv class\u003d\"sidebar\"\u003e\n      \u003ch2\u003eCorreos Generados\u003c/h2\u003e\n      \u003cbutton class\u003d\"refresh-btn\" onclick\u003d\"refreshAliasHistory()\"\u003eActualizar\u003c/button\u003e\n      \u003cdiv class\u003d\"alias-list\" id\u003d\"aliasHistory\"\u003e\u003cp\u003eCargando...\u003c/p\u003e\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class\u003d\"main-content\"\u003e\n      \u003cdiv class\u003d\"toolbar\"\u003e\n        \u003cdiv class\u003d\"searchbox\"\u003e\n          \u003cinput type\u003d\"text\" id\u003d\"searchTag\" placeholder\u003d\"Tag/alias (ej. test)\"\u003e\n          \u003cinput type\u003d\"text\" id\u003d\"searchSubject\" placeholder\u003d\"Asunto (opcional)\"\u003e\n          \u003cinput type\u003d\"number\" id\u003d\"searchLimit\" value\u003d\"10\" min\u003d\"1\" max\u003d\"100\" style\u003d\"width:60px;\"\u003e\n        \u003c/div\u003e\n        \u003cdiv class\u003d\"button-group\"\u003e\n          \u003cbutton class\u003d\"button\" onclick\u003d\"searchEmails()\"\u003eBuscar\u003c/button\u003e\n          \u003cbutton class\u003d\"button\" onclick\u003d\"getLatestEmail()\"\u003eÚltimo\u003c/button\u003e\n          \u003cbutton class\u003d\"button\" onclick\u003d\"getAllMessages()\"\u003eTodos\u003c/button\u003e\n        \u003c/div\u003e\n      \u003c/div\u003e\n      \u003cdiv class\u003d\"refresh-timer\" id\u003d\"refreshTimer\"\u003ePróxima actualización en: 5 sec.\u003c/div\u003e\n      \u003cdiv id\u003d\"statusDiv\"\u003e\u003c/div\u003e\n      \u003cdiv class\u003d\"message-list\" id\u003d\"emailList\" style\u003d\"flex:1 1 0; min-width:0;\"\u003e\n        \u003cp style\u003d\"color:#888;padding:24px;\"\u003eSelecciona un alias para ver sus mensajes o pulsa “Todos”.\u003c/p\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c!-- Modal para mensaje --\u003e\n  \u003cdiv class\u003d\"gmail-modal-bg\" id\u003d\"gmailModal\"\u003e\n    \u003cdiv class\u003d\"gmail-modal-panel\"\u003e\n      \u003cdiv class\u003d\"modal-header\"\u003e\n        \u003cspan id\u003d\"modalSubject\"\u003e\u003c/span\u003e\n        \u003cbutton class\u003d\"modal-close-btn\" onclick\u003d\"hidePanel()\"\u003e\u0026times;\u003c/button\u003e\n      \u003c/div\u003e\n      \u003cdiv class\u003d\"modal-body\"\u003e\n        \u003cdiv class\u003d\"modal-fields\"\u003e\n          \u003cdiv class\u003d\"field\"\u003e\u003cspan class\u003d\"label\"\u003eDe:\u003c/span\u003e \u003cspan class\u003d\"value\" id\u003d\"modalFrom\"\u003e\u003c/span\u003e\u003c/div\u003e\n          \u003cdiv class\u003d\"field\"\u003e\u003cspan class\u003d\"label\"\u003eCorreo:\u003c/span\u003e \u003cspan class\u003d\"value\" id\u003d\"modalFromEmail\"\u003e\u003c/span\u003e\u003c/div\u003e\n          \u003cdiv class\u003d\"field\"\u003e\u003cspan class\u003d\"label\"\u003ePara:\u003c/span\u003e \u003cspan class\u003d\"value\" id\u003d\"modalTo\"\u003e\u003c/span\u003e\u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class\u003d\"modal-html-box\" id\u003d\"modalHtmlBox\"\u003e\u003c/div\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cscript\u003e\n  let aliasList \u003d [];\n  let selectedAlias \u003d null;\n  let allEmailsCache \u003d [];\n  let lastResultEmails \u003d {tag:null, emails:[]};\n  let selectedMessageId \u003d null;\n\n  // ----- AUTORREFRESCO -----\n  let timer \u003d 15;\n  let timerInt \u003d null;\n  function startRefreshCountdown() {\n    if(timerInt) clearInterval(timerInt);\n    timer \u003d 15;\n    document.getElementById(\"refreshTimer\").innerText \u003d \"Próxima actualización en: 15 sec.\";\n    timerInt \u003d setInterval(function() {\n      timer--;\n      document.getElementById(\"refreshTimer\").innerText \u003d \"Próxima actualización en: \" + timer + \" sec.\";\n      if(timer \u003c\u003d 0) {\n        timer \u003d 15;\n        autoRefreshMessages();\n        document.getElementById(\"refreshTimer\").innerText \u003d \"Próxima actualización en: 15 sec.\";\n      }\n    }, 1000);\n  }\n  function autoRefreshMessages() {\n    if (selectedAlias) {\n      loadEmailsByAlias(selectedAlias);\n    } else {\n      getAllMessages();\n    }\n  }\n  function showStatus(msg, type\u003d\u0027info\u0027) {\n    document.getElementById(\u0027statusDiv\u0027).innerHTML \u003d `\u003cdiv class\u003d\"status ${type}\"\u003e${msg}\u003c/div\u003e`;\n  }\n  function refreshAliasHistory() {\n    document.getElementById(\u0027aliasHistory\u0027).innerHTML \u003d \u0027\u003cp\u003eCargando...\u003c/p\u003e\u0027;\n    google.script.run\n      .withSuccessHandler(displayAliasHistory)\n      .getAliasHistoryForFrontend();\n  }\n  function displayAliasHistory(list) {\n    aliasList \u003d list || [];\n    const div \u003d document.getElementById(\u0027aliasHistory\u0027);\n    if (!list || list.length \u003d\u003d\u003d 0) {\n      div.innerHTML \u003d \u0027\u003cp\u003eNo hay alias encontrados.\u003c/p\u003e\u0027;\n      return;\n    }\n    let html \u003d \u0027\u0027;\n    list.forEach((alias, i) \u003d\u003e {\n      html +\u003d `\u003cdiv class\u003d\"alias-item${selectedAlias\u003d\u003d\u003dalias?\u0027 selected\u0027:\u0027\u0027}\"\u003e\n        \u003cspan style\u003d\"flex:1;cursor:pointer;\" onclick\u003d\"selectAlias(\u0027${alias}\u0027)\"\u003e${alias}\u003c/span\u003e\n        \u003cbutton class\u003d\"copy-btn\" onclick\u003d\"copyAlias(event, \u0027${alias}\u0027)\"\u003eCopiar\u003c/button\u003e\n      \u003c/div\u003e`;\n    });\n    div.innerHTML \u003d html;\n  }\n  // Función para copiar alias\n  window.copyAlias \u003d function(event, alias) {\n    event.stopPropagation();\n    navigator.clipboard.writeText(alias).then(function() {\n      const btn \u003d event.target;\n      const oldText \u003d btn.innerText;\n      btn.innerText \u003d \u0027¡Copiado!\u0027;\n      btn.classList.add(\u0027copied\u0027);\n      setTimeout(() \u003d\u003e {\n        btn.innerText \u003d \u0027Copiar\u0027;\n        btn.classList.remove(\u0027copied\u0027);\n      }, 1200);\n    });\n  };\n  window.selectAlias \u003d function(alias) {\n    selectedAlias \u003d alias;\n    selectedMessageId \u003d null;\n    highlightSidebar(alias);\n    loadEmailsByAlias(alias);\n  };\n  function highlightSidebar(alias) {\n    document.querySelectorAll(\u0027.alias-item\u0027).forEach(el\u003d\u003e{\n      el.classList.toggle(\u0027selected\u0027, el.textContent.includes(alias));\n    });\n  }\n  function loadEmailsByAlias(alias) {\n    showStatus(\u0027Cargando mensajes...\u0027, \u0027info\u0027);\n    document.getElementById(\u0027emailList\u0027).innerHTML \u003d \u0027\u0027;\n    google.script.run\n      .withSuccessHandler(function(list) {\n        displayEmails(list, alias);\n        showStatus(`Mostrando mensajes para ${alias}`, \u0027success\u0027);\n      })\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error cargando mensajes\u0027,\u0027error\u0027))\n      .getEmailsByAlias(alias, 40);\n  }\n  function getAllMessages() {\n    selectedAlias \u003d null;\n    selectedMessageId \u003d null;\n    highlightSidebar(null);\n    showStatus(\u0027Cargando todos los mensajes...\u0027, \u0027info\u0027);\n    document.getElementById(\u0027emailList\u0027).innerHTML \u003d \u0027\u0027;\n    google.script.run\n      .withSuccessHandler(function(list) {\n        allEmailsCache \u003d list;\n        displayEmails(list,\u0027todos\u0027);\n        showStatus(\u0027Mostrando todos los mensajes\u0027,\u0027success\u0027);\n      })\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error cargando mensajes\u0027,\u0027error\u0027))\n      .getAllEmailsForFrontend();\n  }\n  function displayEmails(emails, tag) {\n    lastResultEmails \u003d {tag, emails};\n    const emailList \u003d document.getElementById(\u0027emailList\u0027);\n    emailList.innerHTML \u003d \u0027\u0027;\n    if (!emails || emails.length \u003d\u003d\u003d 0) {\n      emailList.innerHTML \u003d \u0027\u003cp style\u003d\"padding:32px;color:#888;\"\u003eNo se encontraron emails\u003c/p\u003e\u0027;\n      hidePanel();\n      return;\n    }\n    emails.forEach((email, idx) \u003d\u003e {\n      const date \u003d new Date(email.timestamp * 1000).toLocaleString();\n      const isSelected \u003d selectedMessageId \u003d\u003d\u003d email.id;\n      const html \u003d `\u003cdiv class\u003d\"message-item${isSelected?\u0027 selected\u0027:\u0027\u0027}\" onclick\u003d\"openMessage(\u0027${email.id}\u0027)\"\u003e\n          \u003cdiv class\u003d\"message-info\"\u003e\n            \u003cdiv class\u003d\"message-from\"\u003e${email.from||\u0027\u0027}\u003c/div\u003e\n            \u003cdiv class\u003d\"message-to\"\u003e${email.to||\u0027\u0027}\u003c/div\u003e\n            \u003cdiv class\u003d\"message-subject\"\u003e${email.subject||\u0027\u0027}\u003c/div\u003e\n            \u003cdiv class\u003d\"message-date\"\u003e${date}\u003c/div\u003e\n            \u003cdiv class\u003d\"message-preview\"\u003e${(email.text||\u0027\u0027).substring(0,90)}...\u003c/div\u003e\n          \u003c/div\u003e\n        \u003c/div\u003e`;\n      emailList.insertAdjacentHTML(\u0027beforeend\u0027, html);\n    });\n  }\n  window.openMessage \u003d function(emailId) {\n    selectedMessageId \u003d emailId;\n    document.querySelectorAll(\u0027.message-item\u0027).forEach(el\u003d\u003e{\n      el.classList.toggle(\u0027selected\u0027, el.outerHTML.includes(emailId));\n    });\n    google.script.run\n      .withSuccessHandler(displayMessagePanel)\n      .getEmailBodyById(lastResultEmails.tag, emailId);\n  };\n  function extractEmailAddress(fromField) {\n    if (!fromField) return \u0027\u0027;\n    const match \u003d fromField.match(/\u003c([^\u003e]+)\u003e/);\n    if (match) return match[1];\n    if (fromField.includes(\u0027@\u0027)) return fromField.trim();\n    return \u0027\u0027;\n  }\n  function displayMessagePanel(email) {\n    if (!email) {\n      hidePanel();\n      return;\n    }\n    document.getElementById(\u0027modalSubject\u0027).innerText \u003d email.subject || \u0027\u0027;\n    document.getElementById(\u0027modalFrom\u0027).innerText \u003d email.from || \u0027\u0027;\n    document.getElementById(\u0027modalFromEmail\u0027).innerText \u003d extractEmailAddress(email.from || \u0027\u0027);\n    document.getElementById(\u0027modalTo\u0027).innerText \u003d email.to || \u0027\u0027;\n    document.getElementById(\u0027modalHtmlBox\u0027).innerHTML \u003d email.html\n      ? email.html\n      : (\u0027\u003cpre\u003e\u0027 + (email.text || \u0027[Sin cuerpo de texto]\u0027) + \u0027\u003c/pre\u003e\u0027);\n    document.getElementById(\u0027gmailModal\u0027).classList.add(\u0027active\u0027);\n  }\n  function hidePanel() {\n    document.getElementById(\u0027gmailModal\u0027).classList.remove(\u0027active\u0027);\n    selectedMessageId \u003d null;\n    document.querySelectorAll(\u0027.message-item\u0027).forEach(el\u003d\u003eel.classList.remove(\u0027selected\u0027));\n  }\n  function searchEmails() {\n    const tag \u003d document.getElementById(\u0027searchTag\u0027).value.trim();\n    const subject \u003d document.getElementById(\u0027searchSubject\u0027).value.trim();\n    const limit \u003d parseInt(document.getElementById(\u0027searchLimit\u0027).value) || 10;\n    showStatus(\u0027Buscando emails...\u0027, \u0027info\u0027);\n    google.script.run\n      .withSuccessHandler(function(result) {\n        displayEmails(result.emails || [], tag);\n        showStatus(`Búsqueda completada: ${result.count||result.emails?.length||0} emails encontrados`, \u0027success\u0027);\n      })\n      .withFailureHandler(err\u003d\u003eshowStatus(\u0027Error en la búsqueda\u0027,\u0027error\u0027))\n      .searchEmails(tag, subject, \u0027\u0027, limit);\n  }\n  function getLatestEmail() {\n    const tag \u003d document.getElementById(\u0027searchTag\u0027).value.trim() || \u0027test\u0027;\n    showStatus(\u0027Obteniendo último email...\u0027, \u0027info\u0027);\n    google.script.run\n      .withSuccessHandler(function(email) {\n        if (email) {\n          displayEmails([email], tag);\n          showStatus(\u0027Último email obtenido\u0027, \u0027success\u0027);\n        } else {\n          document.getElementById(\u0027emailList\u0027).innerHTML \u003d \u0027\u003cp\u003eNo hay emails en este buzón\u003c/p\u003e\u0027;\n          showStatus(\u0027No se encontraron emails\u0027, \u0027info\u0027);\n        }\n      })\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error obteniendo email\u0027,\u0027error\u0027))\n      .getLatestEmail(tag);\n  }\n  function validateConfig() {\n    showStatus(\u0027Validando configuración...\u0027, \u0027info\u0027);\n    google.script.run\n      .withSuccessHandler(function(isValid) {\n        if (isValid) showStatus(\u0027✅ API funcionando correctamente\u0027, \u0027success\u0027);\n        else showStatus(\u0027❌ Error en la configuración de la API\u0027, \u0027error\u0027);\n      })\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error validando configuración\u0027,\u0027error\u0027))\n      .validateAPIConfiguration();\n  }\n  function createReport() {\n    const tag \u003d document.getElementById(\u0027searchTag\u0027).value || \u0027test\u0027;\n    showStatus(\u0027Creando reporte...\u0027, \u0027info\u0027);\n    google.script.run\n      .withSuccessHandler(()\u003d\u003eshowStatus(\u0027✅ Reporte creado en la hoja\u0027, \u0027success\u0027))\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error creando reporte\u0027, \u0027error\u0027))\n      .createEmailReport(tag);\n  }\n  function waitForEmail() {\n    const tag \u003d document.getElementById(\u0027searchTag\u0027).value || \u0027test\u0027;\n    showStatus(\u0027Esperando nuevo email...\u0027, \u0027info\u0027);\n    google.script.run\n      .withSuccessHandler(function(email) {\n        if (email) {\n          displayEmails([email], tag);\n          showStatus(\u0027✅ Nuevo email recibido!\u0027, \u0027success\u0027);\n        } else {\n          showStatus(\u0027No se recibieron nuevos emails\u0027, \u0027info\u0027);\n        }\n      })\n      .withFailureHandler(()\u003d\u003eshowStatus(\u0027Error esperando email\u0027, \u0027error\u0027))\n      .waitForNewEmail(tag, 30);\n  }\n  window.onload \u003d function() {\n    refreshAliasHistory();\n    getAllMessages();\n    startRefreshCountdown();\n  };\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e"}]}